(in-package :mortar-combat)


(defun make-ui (board)
  (enable-mouse-input board)
  (enable-character-input board)
  (enable-cursor-input board)
  (enable-keyboard-input board)

  (let ((main-menu (make-board-window board 300 150 200 82 :hidden t))
        (arena-creation-dialog (make-board-window board 300 200 200 145
                                                  :title "Enter arena name:"
                                                  :headerless nil
                                                  :hidden t))
        (game-menu (make-board-window board 20 536 760 44 :hidden t))
        (combat-zone (make-board-window board 10 10 780 580 :hidden t))
        (login-dialog (make-board-window board 300 200 200 145
                                  :title "Enter your name:"
                                  :headerless nil)))
    (adopt-layout-by (main-menu)
      ((dynamic-row-layout 32 1)
       ((label-button "Combat zone" :name :combat-zone))
       ((label-button "Quit" :name :quit))))


    (adopt-layout-by (login-dialog)
      ((dynamic-row-layout 32)
       ((text-edit :name :nickname)))
      ((static-row-layout 16 1))
      ((dynamic-row-layout 32)
       ((label-button "Quit" :name :quit))
       ((spacing))
       ((label-button "Log in" :name :login))))


    (adopt-layout-by (arena-creation-dialog)
      ((dynamic-row-layout 32)
       ((text-edit :name :arena-name)))
      ((static-row-layout 16 1))
      ((dynamic-row-layout 32)
       ((label-button "Cancel" :name :arena-cancel))
       ((spacing))
       ((label-button "Go!" :name :arena-create))))

    (adopt-layout-by (game-menu)
      ((dynamic-row-layout 32)
       ((label-button "Leave arena" :name :leave))
       ((label-button "Quit" :name :quit))))

    (adopt-layout-by (combat-zone)
      ((dynamic-row-layout 32)
       ((label-button "Create" :name :create))
       ((label-button "Join" :name :join))
       ((label-button "Refresh " :name :refresh))
       ((label-button "Main menu" :name :zone-to-main-menu)))
      ((dynamic-row-layout 32 1)
       ((text-label "Available arenas:"))
       ((list-select 32 :name :arena-list))))

    (let ((nickname-edit (find-element login-dialog :nickname))
          (arena-name-edit (find-element arena-creation-dialog :arena-name))
          (arena-list (find-element combat-zone :arena-list))
          (selected-arena))
      (flet ((refresh-arena-list ()
               (run (>> (load-arena-list)
                        (-> ((mortar-combat)) (list)
                          (clear arena-list)
                          (dolist (name list)
                            (add-item arena-list name)))))))
        (subscribe-body-to (button-click-event (poiu-button)) (events)
          (run (-> ((mortar-combat)) ()
                 (case (name-of poiu-button)
                   (:login (connect (text-of nickname-edit))
                           (hide-window login-dialog)
                           (show-window main-menu))
                   (:combat-zone (refresh-arena-list)
                                 (hide-window main-menu)
                                 (show-window combat-zone))
                   (:zone-to-main-menu (hide-window combat-zone) (show-window main-menu))
                   (:refresh (refresh-arena-list))
                   (:create (hide-window combat-zone) (show-window arena-creation-dialog))
                   (:join (when selected-arena
                            (post (make-arena-join-requested selected-arena) (events))
                            (hide-window combat-zone)))
                   (:arena-cancel (hide-window arena-creation-dialog) (show-window combat-zone))
                   (:arena-create (post (make-new-arena-requested (text-of arena-name-edit)) (events))
                                  (hide-window arena-creation-dialog))
                   (:quit (post (make-exit-requested) (events))))))))
      (subscribe-body-to (item-selected (source item)) (events)
        (when (eq source arena-list)
          (setf selected-arena (item-name-of item)))))))
